(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[90],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},335:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var a=n(2122),o=n(9756),i=(n(7294),n(3905)),r=["components"],l={slug:"docusaurus-plugins",title:"How to create a custom plugin for Docusaurus",author:"Nick Silva",author_title:"College Rising Junior",author_url:"https://github.com/silva-nick",author_image_url:"https://avatars.githubusercontent.com/u/39960606?v=4",tags:["blog","how to","swe","under construction"]},s=void 0,u={permalink:"/portfolio/blog/docusaurus-plugins",editUrl:"https://github.com/silva-nick/portfolio/tree/main/blog/blog/2021-07-07-plugin.md",source:"@site/blog/2021-07-07-plugin.md",title:"How to create a custom plugin for Docusaurus",description:"Introduction",date:"2021-07-07T00:00:00.000Z",formattedDate:"July 7, 2021",tags:[{label:"blog",permalink:"/portfolio/blog/tags/blog"},{label:"how to",permalink:"/portfolio/blog/tags/how-to"},{label:"swe",permalink:"/portfolio/blog/tags/swe"},{label:"under construction",permalink:"/portfolio/blog/tags/under-construction"}],readingTime:4.11,truncated:!0,nextItem:{title:"Understanding Latent Semantic Analysis",permalink:"/portfolio/blog/lsa"}},c=[{value:"Introduction",id:"introduction",children:[{value:"General overview of Docusaurus",id:"general-overview-of-docusaurus",children:[]},{value:"Managing multi-package projects",id:"managing-multi-package-projects",children:[]},{value:"Docusaurus dependencies",id:"docusaurus-dependencies",children:[]},{value:"Other general recommendations",id:"other-general-recommendations",children:[]}]},{value:"Creating a data-driven plugin",id:"creating-a-data-driven-plugin",children:[{value:"Plugin lifecycle api",id:"plugin-lifecycle-api",children:[]}]},{value:"Adding custom components through a theme",id:"adding-custom-components-through-a-theme",children:[{value:"Theme lifecycle api",id:"theme-lifecycle-api",children:[]}]},{value:"Initialization",id:"initialization",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"One of Docusaurus's best features is its growing library of open-source plugins and themes. Before starting your plugin, check out the ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/next/api/plugins"},"officially supported")," and ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/community/resources#community-plugins"},"community maintained")," plugins already available. Although there are already a lot of plugins on the market, there are still many that haven't been written. This guide should help take you along the path of development."),(0,i.kt)("h3",{id:"general-overview-of-docusaurus"},"General overview of Docusaurus"),(0,i.kt)("p",null,"Docusaurus is a React-based documentation website platform supported by Facebook. There are a lot of documentation and website platforms already available, so why choose Docusaurus? On their homepage they claim that Docusaurus supports using markdown or ",(0,i.kt)("inlineCode",{parentName:"p"},"mdx")," for writing pages, using custom React components, creating versioned websites for different releases, easy translation, and built-in content search. From a development perspective, Docusaurus allows the user to be as involved as they want. The most simple Docusaurus sites don't have to go beyond simple markdown repositories. What's great about Docusaurus, however, is the simplicity of using React to define custom components and plugins to fill those components with data."),(0,i.kt)("h4",{id:"docusaurus-from-a-users-perspective"},"Docusaurus from a user's perspective"),(0,i.kt)("p",null,"To get started with Docusaurus, the best place to start is ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/next"},"their introduction documentation"),". The easiest way to quickly get started is to run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npx @docusaurus/init@latest init my-website classic\n...\ncd my-website\nnpx docusaurus start\n")),(0,i.kt)("p",null,"As a user, there are a couple of file's and directories that are useful to get familiar with."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"docusaurus.config.js"),": This is where all the main configuration for your Docusaurus site should go. In this file you're able to change the website routing, sitebar styling, title, and other aspects of the ui generally already handled for you."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/docs"),": The docs directory is where all of your documentation files should be placed. Whether ",(0,i.kt)("inlineCode",{parentName:"li"},"md")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"mdx"),", by adding different files in docs, Docusaurus will generate pages in your site containing the new documentation. For more custom control of the sidebar as well as other aspects of the documentation ui, check out ",(0,i.kt)("inlineCode",{parentName:"li"},"docusaurus.config.js"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/blog"),": The blog directory, like the docs one, serves to hold all of the ",(0,i.kt)("inlineCode",{parentName:"li"},"md")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"mdx")," blog posts that you want to be hosted on your website."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/src"),": Now things start to get interesting. The ",(0,i.kt)("inlineCode",{parentName:"li"},"src")," directory holds a bunch of cool places to customize your Docusaurus site. By default ",(0,i.kt)("inlineCode",{parentName:"li"},"/css")," contains a global css script that will be used across all of your site. This can be useful to update colors, fonts, or styling specific components. ",(0,i.kt)("inlineCode",{parentName:"li"},"pages")," holds ",(0,i.kt)("inlineCode",{parentName:"li"},"index.js")," the default page of your website."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"/static/img"),": All images used in your blog or documentation should find there home in ",(0,i.kt)("inlineCode",{parentName:"li"},"/static/img"),". From here they can be referenced like ",(0,i.kt)("inlineCode",{parentName:"li"},"![My Image](/img/blog/my_image.png)"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note:")," for more information on any of these topics check out the ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/next/creating-pages"},"Docusaurus official documentation"),"."),(0,i.kt)("h4",{id:"some-general-vocabulary-to-get-started"},"Some general vocabulary to get started:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Plugin: external code that implements Docusaurus's lifecycle APIs. ",(0,i.kt)("em",{parentName:"li"},"Plugins")," are generally server-side and can be used to fetch data, generate routes and pages, or load external code into your project. One singular plugin could implement the lifecycle api and have both server-side and frontend components."),(0,i.kt)("li",{parentName:"ul"},"Theme: a term used to differentiate frontend specific plugins. These often contain React components and must furfill the ",(0,i.kt)("em",{parentName:"li"},"theme")," lifecycle api."),(0,i.kt)("li",{parentName:"ul"},"Preset: a plugin that helps combine and configure different presets of plugins and themes."),(0,i.kt)("li",{parentName:"ul"},"Init: general term used to describe cli-based Docusaurus initialization packages.")),(0,i.kt)("h4",{id:"anatomy-of-a-plugin"},"Anatomy of a plugin"),(0,i.kt)("p",null,"Throughout the rest of this blog post, I will be referencing the plugin used to design this site (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/silva-nick/docusaurus-portfolio"},(0,i.kt)("inlineCode",{parentName:"a"},"docusaurus-portfolio")),"). At any time, feel free to check out the source if you think that would be useful."),(0,i.kt)("p",null,"In its most simple form, a plugin is a function that supports specific parts of the Docusaurus lifecycle api. So, before continuing here, I highly recommend reading through the official ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/next/lifecycle-apis"},"lifecycle api documentation")," to get a general feel of what you can accomplish through a plugin."),(0,i.kt)("h3",{id:"managing-multi-package-projects"},"Managing multi-package projects"),(0,i.kt)("p",null,"In most cases, plugins will be npm packages that users can access and install from the command line. Moreover, if you want so support independent initialization and theme plugins, then your singular ",(0,i.kt)("em",{parentName:"p"},"plugin")," may end up as 2-3 npm packages."),(0,i.kt)("h4",{id:"using-lerna"},"Using Lerna"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"Lerna")," is a super useful npm package manager that helps seamlessly develop and release multiple packages. To get started with Lerna, install it using npm and then initialize a Lerna project."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --global lerna\n...\nlerna init\n")),(0,i.kt)("p",null,"This should walk you through generating a ",(0,i.kt)("inlineCode",{parentName:"p"},"lerna.json")," file that is maintained at root. Now, whenever you want to publish your packages to the node package manager, simply commit all changes and then run ",(0,i.kt)("inlineCode",{parentName:"p"},"lerna publish"),". For more detailed instructions and more commands available, check out the ",(0,i.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},"Lerna documentation"),"."),(0,i.kt)("h4",{id:"multi-package-typescript"},"Multi-package TypeScript"),(0,i.kt)("p",null,"TypeScript is a powerful tool for creating"),(0,i.kt)("h3",{id:"docusaurus-dependencies"},"Docusaurus dependencies"),(0,i.kt)("h3",{id:"other-general-recommendations"},"Other general recommendations"),(0,i.kt)("h2",{id:"creating-a-data-driven-plugin"},"Creating a data-driven plugin"),(0,i.kt)("h3",{id:"plugin-lifecycle-api"},"Plugin lifecycle api"),(0,i.kt)("h2",{id:"adding-custom-components-through-a-theme"},"Adding custom components through a theme"),(0,i.kt)("h3",{id:"theme-lifecycle-api"},"Theme lifecycle api"),(0,i.kt)("h2",{id:"initialization"},"Initialization"),(0,i.kt)("h3",{id:""}))}d.isMDXComponent=!0}}]);